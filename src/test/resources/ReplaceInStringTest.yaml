initCycles: 1
samplingIntervalForInitInMs: 1
calmDownIntervalInMs: 1
percentageOfSamplesAtBeginningToDiscard: 1
samplingIntervalInMs: 1
measurement:
  # Specify which measurement method to use. Possible values: lhm, csv
  method: 'est'
  # Configuration for reading from csv file. E.g. output from HWInfo
  csv:
    # Path to csv file to read measure values from
    inputFile: 'hwinfo-test.csv'
    # Which line in the csv input file contains the current measured values? The first or the last? This depends on the measurement tool. Possible value: first, last
    lineToRead: 'first'
    # Columns to read, index starts at 0.
    columns:
      - { index: 2, name: 'CPU Power', energyInIdleMode: 1.01 }
    encoding: 'UTF-8'
    delimiter: ','
  est:
    # Compare https://www.cloudcarbonfootprint.org/docs/methodology/#energy-estimate-watt-hours
    # Defaults are the average values from AWS: 0.74 - 3.5
    # Find the values for your VM here: https://github.com/cloud-carbon-footprint/cloud-carbon-coefficients/tree/main/data
    #                          or here: https://github.com/re-cinq/emissions-data/tree/main/data/v2
    # Determine AWS instance type in terminal: ´curl http://169.254.169.254/latest/meta-data/instance-type´
    cpuMinWatts: 8
    cpuMaxWatts: 40
csvRecording:
  resultCsv: 'test_energyconsumption.csv'
  measurementCsv: 'test_measurement.csv'
javaAgent:
  packageFilter: [ 'com.something', 'com.anything' ]
  measurementIntervalInMs: 1
  gatherStatisticsIntervalInMs: 1
  writeEnergyMeasurementsToCsvIntervalInS: 1
